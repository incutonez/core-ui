import { DataTableProps } from 'primevue/datatable';
import { IBaseMenu } from '../components/BaseMenu.vue';
import { IOption } from '../types/components';
import { IPassThroughOptions, ITableColumn, ITableGrid, ITreeNode, TColumnLock, TTableEmit } from '../types/table';
export declare const RowsPerPageOptions: IOption[];
export declare function getColumnProps({ field, title, classes, titleCls, titleAlign, sortable, lock, cls, showMenu, id, expandable, rowspan, colspan }: ITableColumn): {
    columnKey?: string | undefined;
    field?: string | ((item: any) => string) | undefined;
    sortField?: string | ((item: any) => string) | undefined;
    filterField?: string | ((item: any) => string) | undefined;
    dataType?: string | undefined;
    sortable?: boolean | undefined;
    header?: string | undefined;
    footer?: string | undefined;
    style?: any;
    class?: any;
    headerStyle?: any;
    headerClass?: any;
    bodyStyle?: any;
    bodyClass?: any;
    footerStyle?: any;
    footerClass?: any;
    showFilterMenu?: boolean | undefined;
    showFilterOperator?: boolean | undefined;
    showClearButton?: boolean | undefined;
    showApplyButton?: boolean | undefined;
    showFilterMatchModes?: boolean | undefined;
    showAddButton?: boolean | undefined;
    filterMatchModeOptions?: import('primevue/column').ColumnFilterMatchModeOptions[] | undefined;
    maxConstraints?: number | undefined;
    excludeGlobalFilter?: boolean | undefined;
    filterHeaderStyle?: any;
    filterHeaderClass?: any;
    filterMenuStyle?: any;
    filterMenuClass?: any;
    selectionMode?: "single" | "multiple" | undefined;
    expander?: boolean | undefined;
    colspan?: number | undefined;
    rowspan?: number | undefined;
    rowReorder?: boolean | undefined;
    rowReorderIcon?: string | undefined;
    reorderableColumn?: boolean | undefined;
    rowEditor?: boolean | undefined;
    frozen?: boolean | undefined;
    alignFrozen?: "left" | "right" | undefined;
    exportable?: boolean | undefined;
    exportHeader?: string | undefined;
    exportFooter?: string | undefined;
    filterMatchMode?: string | undefined;
    hidden?: boolean | undefined;
    dt?: import('@primevue/core').DesignToken<any>;
    pt?: object | {
        root?: import('primevue/column').ColumnPassThroughOptionType;
        headerCell?: import('primevue/column').ColumnPassThroughOptionType;
        columnResizer?: import('primevue/column').ColumnPassThroughOptionType;
        columnHeaderContent?: import('primevue/column').ColumnPassThroughOptionType;
        columnTitle?: import('primevue/column').ColumnPassThroughOptionType;
        sort?: import('primevue/column').ColumnPassThroughOptionType;
        sortIcon?: import('primevue/column').ColumnPassThroughOptionType;
        pcSortBadge?: {
            root?: import('primevue/badge').BadgePassThroughOptionType<any>;
            hooks?: {
                onBeforeCreate?: (() => void) | undefined;
                onCreated?: (() => void) | undefined;
                onBeforeMount?: (() => void) | undefined;
                onMounted?: (() => void) | undefined;
                onBeforeUpdate?: (() => void) | undefined;
                onUpdated?: (() => void) | undefined;
                onBeforeUnmount?: (() => void) | undefined;
                onUnmounted?: (() => void) | undefined;
            } | undefined;
        } | undefined;
        pcHeaderCheckbox?: import('primevue/checkbox').CheckboxPassThroughOptionType;
        filter?: import('primevue/column').ColumnPassThroughOptionType;
        filterElementContainer?: import('primevue/column').ColumnPassThroughOptionType;
        pcColumnFilterButton?: import('primevue/column').ColumnPassThroughOptionType;
        filterMenuIcon?: import('primevue/column').ColumnPassThroughOptionType;
        pcColumnFilterClearButton?: import('primevue/column').ColumnPassThroughOptionType;
        filterClearIcon?: import('primevue/column').ColumnPassThroughOptionType;
        filterOverlay?: import('primevue/column').ColumnPassThroughOptionType;
        filterConstraintList?: import('primevue/column').ColumnPassThroughOptionType;
        filterConstraint?: import('primevue/column').ColumnPassThroughOptionType;
        filterConstraintSeparator?: import('primevue/column').ColumnPassThroughOptionType;
        filterOperator?: import('primevue/column').ColumnPassThroughOptionType;
        pcFilterOperatorDropdown?: import('primevue/select').SelectPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
        filterRuleList?: import('primevue/column').ColumnPassThroughOptionType;
        filterRule?: import('primevue/column').ColumnPassThroughOptionType;
        pcFilterConstraintDropdown?: import('primevue/select').SelectPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
        filterRemove?: import('primevue/column').ColumnPassThroughOptionType;
        pcFilterRemoveRuleButton?: {
            root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            hooks?: {
                onBeforeCreate?: (() => void) | undefined;
                onCreated?: (() => void) | undefined;
                onBeforeMount?: (() => void) | undefined;
                onMounted?: (() => void) | undefined;
                onBeforeUpdate?: (() => void) | undefined;
                onUpdated?: (() => void) | undefined;
                onBeforeUnmount?: (() => void) | undefined;
                onUnmounted?: (() => void) | undefined;
            } | undefined;
        } | undefined;
        filterAddButtonContainer?: import('primevue/column').ColumnPassThroughOptionType;
        pcFilterAddRuleButton?: {
            root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            hooks?: {
                onBeforeCreate?: (() => void) | undefined;
                onCreated?: (() => void) | undefined;
                onBeforeMount?: (() => void) | undefined;
                onMounted?: (() => void) | undefined;
                onBeforeUpdate?: (() => void) | undefined;
                onUpdated?: (() => void) | undefined;
                onBeforeUnmount?: (() => void) | undefined;
                onUnmounted?: (() => void) | undefined;
            } | undefined;
        } | undefined;
        filterButtonbar?: import('primevue/column').ColumnPassThroughOptionType;
        pcFilterClearButton?: {
            root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            hooks?: {
                onBeforeCreate?: (() => void) | undefined;
                onCreated?: (() => void) | undefined;
                onBeforeMount?: (() => void) | undefined;
                onMounted?: (() => void) | undefined;
                onBeforeUpdate?: (() => void) | undefined;
                onUpdated?: (() => void) | undefined;
                onBeforeUnmount?: (() => void) | undefined;
                onUnmounted?: (() => void) | undefined;
            } | undefined;
        } | undefined;
        pcFilterApplyButton?: {
            root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            hooks?: {
                onBeforeCreate?: (() => void) | undefined;
                onCreated?: (() => void) | undefined;
                onBeforeMount?: (() => void) | undefined;
                onMounted?: (() => void) | undefined;
                onBeforeUpdate?: (() => void) | undefined;
                onUpdated?: (() => void) | undefined;
                onBeforeUnmount?: (() => void) | undefined;
                onUnmounted?: (() => void) | undefined;
            } | undefined;
        } | undefined;
        rowToggleButton?: import('primevue/column').ColumnPassThroughOptionType;
        rowToggleIcon?: import('primevue/column').ColumnPassThroughOptionType;
        bodyCell?: import('primevue/column').ColumnPassThroughOptionType;
        reorderableRowHandle?: import('primevue/column').ColumnPassThroughOptionType;
        pcRowRadiobutton?: import('primevue/radiobutton').RadioButtonPassThroughOptionType;
        pcRowCheckbox?: import('primevue/checkbox').CheckboxPassThroughOptionType;
        pcRowEditorInit?: import('primevue/column').ColumnPassThroughOptionType;
        pcRowEditorSave?: import('primevue/column').ColumnPassThroughOptionType;
        pcRowEditorCancel?: import('primevue/column').ColumnPassThroughOptionType;
        footerCell?: import('primevue/column').ColumnPassThroughOptionType;
        columnFooter?: import('primevue/column').ColumnPassThroughOptionType;
        bodyCellContent?: import('primevue/column').ColumnPassThroughOptionType;
        hooks?: {
            onBeforeCreate?: (() => void) | undefined;
            onCreated?: (() => void) | undefined;
            onBeforeMount?: (() => void) | undefined;
            onMounted?: (() => void) | undefined;
            onBeforeUpdate?: (() => void) | undefined;
            onUpdated?: (() => void) | undefined;
            onBeforeUnmount?: (() => void) | undefined;
            onUnmounted?: (() => void) | undefined;
        } | undefined;
    } | undefined;
    ptOptions?: {
        mergeSections?: boolean | undefined;
        mergeProps?: import('primevue/passthrough').PassThroughMergePropsType;
    } | undefined;
    unstyled?: boolean | undefined;
};
export declare function setColumnLock(lock: TColumnLock, column: ITableColumn): void;
export declare function useDataTable<TData = unknown>(props: ITableGrid, emit: TTableEmit): {
    startDisplay: import('vue').ComputedRef<number>;
    endDisplay: import('vue').ComputedRef<number>;
    isPageFirst: import('vue').ComputedRef<boolean>;
    isPageLast: import('vue').ComputedRef<boolean>;
    totalPages: import('vue').ComputedRef<number>;
    columnsConfig: import('vue').Ref<{
        field?: string | undefined;
        title?: string | undefined;
        titleCls?: string | undefined;
        titleAlign?: ("left" | "center" | "right") | undefined;
        id?: string | undefined;
        key?: string | undefined;
        sortable?: boolean | undefined;
        cellComponent?: InstanceType<any>;
        cellParams?: any;
        cellDisplay?: ((data: unknown, records: unknown[]) => any) | undefined;
        cellClass?: string | ((column: ITableColumn, node: unknown) => string) | undefined;
        lock?: TColumnLock | undefined;
        cls?: string | undefined;
        showMenu?: boolean | undefined;
        state?: {
            lock?: TColumnLock | undefined;
            width?: number | undefined;
            index?: number | undefined;
        } | undefined;
        indexOriginal?: number | undefined;
        props?: {
            columnKey?: string | undefined;
            field?: string | ((item: any) => string) | undefined;
            sortField?: string | ((item: any) => string) | undefined;
            filterField?: string | ((item: any) => string) | undefined;
            dataType?: string | undefined;
            sortable?: boolean | undefined;
            header?: string | undefined;
            footer?: string | undefined;
            style?: any;
            class?: any;
            headerStyle?: any;
            headerClass?: any;
            bodyStyle?: any;
            bodyClass?: any;
            footerStyle?: any;
            footerClass?: any;
            showFilterMenu?: boolean | undefined;
            showFilterOperator?: boolean | undefined;
            showClearButton?: boolean | undefined;
            showApplyButton?: boolean | undefined;
            showFilterMatchModes?: boolean | undefined;
            showAddButton?: boolean | undefined;
            filterMatchModeOptions?: import('primevue/column').ColumnFilterMatchModeOptions[] | undefined;
            maxConstraints?: number | undefined;
            excludeGlobalFilter?: boolean | undefined;
            filterHeaderStyle?: any;
            filterHeaderClass?: any;
            filterMenuStyle?: any;
            filterMenuClass?: any;
            selectionMode?: "single" | "multiple" | undefined;
            expander?: boolean | undefined;
            colspan?: number | undefined;
            rowspan?: number | undefined;
            rowReorder?: boolean | undefined;
            rowReorderIcon?: string | undefined;
            reorderableColumn?: boolean | undefined;
            rowEditor?: boolean | undefined;
            frozen?: boolean | undefined;
            alignFrozen?: "left" | "right" | undefined;
            exportable?: boolean | undefined;
            exportHeader?: string | undefined;
            exportFooter?: string | undefined;
            filterMatchMode?: string | undefined;
            hidden?: boolean | undefined;
            dt?: import('@primevue/core').DesignToken<any>;
            pt?: object | {
                root?: import('primevue/column').ColumnPassThroughOptionType;
                headerCell?: import('primevue/column').ColumnPassThroughOptionType;
                columnResizer?: import('primevue/column').ColumnPassThroughOptionType;
                columnHeaderContent?: import('primevue/column').ColumnPassThroughOptionType;
                columnTitle?: import('primevue/column').ColumnPassThroughOptionType;
                sort?: import('primevue/column').ColumnPassThroughOptionType;
                sortIcon?: import('primevue/column').ColumnPassThroughOptionType;
                pcSortBadge?: {
                    root?: import('primevue/badge').BadgePassThroughOptionType<any>;
                    hooks?: {
                        onBeforeCreate?: (() => void) | undefined;
                        onCreated?: (() => void) | undefined;
                        onBeforeMount?: (() => void) | undefined;
                        onMounted?: (() => void) | undefined;
                        onBeforeUpdate?: (() => void) | undefined;
                        onUpdated?: (() => void) | undefined;
                        onBeforeUnmount?: (() => void) | undefined;
                        onUnmounted?: (() => void) | undefined;
                    } | undefined;
                } | undefined;
                pcHeaderCheckbox?: import('primevue/checkbox').CheckboxPassThroughOptionType;
                filter?: import('primevue/column').ColumnPassThroughOptionType;
                filterElementContainer?: import('primevue/column').ColumnPassThroughOptionType;
                pcColumnFilterButton?: import('primevue/column').ColumnPassThroughOptionType;
                filterMenuIcon?: import('primevue/column').ColumnPassThroughOptionType;
                pcColumnFilterClearButton?: import('primevue/column').ColumnPassThroughOptionType;
                filterClearIcon?: import('primevue/column').ColumnPassThroughOptionType;
                filterOverlay?: import('primevue/column').ColumnPassThroughOptionType;
                filterConstraintList?: import('primevue/column').ColumnPassThroughOptionType;
                filterConstraint?: import('primevue/column').ColumnPassThroughOptionType;
                filterConstraintSeparator?: import('primevue/column').ColumnPassThroughOptionType;
                filterOperator?: import('primevue/column').ColumnPassThroughOptionType;
                pcFilterOperatorDropdown?: import('primevue/select').SelectPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                filterRuleList?: import('primevue/column').ColumnPassThroughOptionType;
                filterRule?: import('primevue/column').ColumnPassThroughOptionType;
                pcFilterConstraintDropdown?: import('primevue/select').SelectPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                filterRemove?: import('primevue/column').ColumnPassThroughOptionType;
                pcFilterRemoveRuleButton?: {
                    root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    hooks?: {
                        onBeforeCreate?: (() => void) | undefined;
                        onCreated?: (() => void) | undefined;
                        onBeforeMount?: (() => void) | undefined;
                        onMounted?: (() => void) | undefined;
                        onBeforeUpdate?: (() => void) | undefined;
                        onUpdated?: (() => void) | undefined;
                        onBeforeUnmount?: (() => void) | undefined;
                        onUnmounted?: (() => void) | undefined;
                    } | undefined;
                } | undefined;
                filterAddButtonContainer?: import('primevue/column').ColumnPassThroughOptionType;
                pcFilterAddRuleButton?: {
                    root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    hooks?: {
                        onBeforeCreate?: (() => void) | undefined;
                        onCreated?: (() => void) | undefined;
                        onBeforeMount?: (() => void) | undefined;
                        onMounted?: (() => void) | undefined;
                        onBeforeUpdate?: (() => void) | undefined;
                        onUpdated?: (() => void) | undefined;
                        onBeforeUnmount?: (() => void) | undefined;
                        onUnmounted?: (() => void) | undefined;
                    } | undefined;
                } | undefined;
                filterButtonbar?: import('primevue/column').ColumnPassThroughOptionType;
                pcFilterClearButton?: {
                    root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    hooks?: {
                        onBeforeCreate?: (() => void) | undefined;
                        onCreated?: (() => void) | undefined;
                        onBeforeMount?: (() => void) | undefined;
                        onMounted?: (() => void) | undefined;
                        onBeforeUpdate?: (() => void) | undefined;
                        onUpdated?: (() => void) | undefined;
                        onBeforeUnmount?: (() => void) | undefined;
                        onUnmounted?: (() => void) | undefined;
                    } | undefined;
                } | undefined;
                pcFilterApplyButton?: {
                    root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    hooks?: {
                        onBeforeCreate?: (() => void) | undefined;
                        onCreated?: (() => void) | undefined;
                        onBeforeMount?: (() => void) | undefined;
                        onMounted?: (() => void) | undefined;
                        onBeforeUpdate?: (() => void) | undefined;
                        onUpdated?: (() => void) | undefined;
                        onBeforeUnmount?: (() => void) | undefined;
                        onUnmounted?: (() => void) | undefined;
                    } | undefined;
                } | undefined;
                rowToggleButton?: import('primevue/column').ColumnPassThroughOptionType;
                rowToggleIcon?: import('primevue/column').ColumnPassThroughOptionType;
                bodyCell?: import('primevue/column').ColumnPassThroughOptionType;
                reorderableRowHandle?: import('primevue/column').ColumnPassThroughOptionType;
                pcRowRadiobutton?: import('primevue/radiobutton').RadioButtonPassThroughOptionType;
                pcRowCheckbox?: import('primevue/checkbox').CheckboxPassThroughOptionType;
                pcRowEditorInit?: import('primevue/column').ColumnPassThroughOptionType;
                pcRowEditorSave?: import('primevue/column').ColumnPassThroughOptionType;
                pcRowEditorCancel?: import('primevue/column').ColumnPassThroughOptionType;
                footerCell?: import('primevue/column').ColumnPassThroughOptionType;
                columnFooter?: import('primevue/column').ColumnPassThroughOptionType;
                bodyCellContent?: import('primevue/column').ColumnPassThroughOptionType;
                hooks?: {
                    onBeforeCreate?: (() => void) | undefined;
                    onCreated?: (() => void) | undefined;
                    onBeforeMount?: (() => void) | undefined;
                    onMounted?: (() => void) | undefined;
                    onBeforeUpdate?: (() => void) | undefined;
                    onUpdated?: (() => void) | undefined;
                    onBeforeUnmount?: (() => void) | undefined;
                    onUnmounted?: (() => void) | undefined;
                } | undefined;
            } | undefined;
            ptOptions?: {
                mergeSections?: boolean | undefined;
                mergeProps?: import('primevue/passthrough').PassThroughMergePropsType;
            } | undefined;
            unstyled?: boolean | undefined;
        } | undefined;
        stateful?: boolean | undefined;
        expandable?: boolean | undefined;
        rowspan?: number | undefined;
        colspan?: number | undefined;
        classes?: {
            root?: import('primevue/column').ColumnPassThroughOptionType;
            headerCell?: import('primevue/column').ColumnPassThroughOptionType;
            columnResizer?: import('primevue/column').ColumnPassThroughOptionType;
            columnHeaderContent?: import('primevue/column').ColumnPassThroughOptionType;
            columnTitle?: import('primevue/column').ColumnPassThroughOptionType;
            sort?: import('primevue/column').ColumnPassThroughOptionType;
            sortIcon?: import('primevue/column').ColumnPassThroughOptionType;
            pcSortBadge?: {
                root?: import('primevue/badge').BadgePassThroughOptionType<any>;
                hooks?: {
                    onBeforeCreate?: (() => void) | undefined;
                    onCreated?: (() => void) | undefined;
                    onBeforeMount?: (() => void) | undefined;
                    onMounted?: (() => void) | undefined;
                    onBeforeUpdate?: (() => void) | undefined;
                    onUpdated?: (() => void) | undefined;
                    onBeforeUnmount?: (() => void) | undefined;
                    onUnmounted?: (() => void) | undefined;
                } | undefined;
            } | undefined;
            pcHeaderCheckbox?: import('primevue/checkbox').CheckboxPassThroughOptionType;
            filter?: import('primevue/column').ColumnPassThroughOptionType;
            filterElementContainer?: import('primevue/column').ColumnPassThroughOptionType;
            pcColumnFilterButton?: import('primevue/column').ColumnPassThroughOptionType;
            filterMenuIcon?: import('primevue/column').ColumnPassThroughOptionType;
            pcColumnFilterClearButton?: import('primevue/column').ColumnPassThroughOptionType;
            filterClearIcon?: import('primevue/column').ColumnPassThroughOptionType;
            filterOverlay?: import('primevue/column').ColumnPassThroughOptionType;
            filterConstraintList?: import('primevue/column').ColumnPassThroughOptionType;
            filterConstraint?: import('primevue/column').ColumnPassThroughOptionType;
            filterConstraintSeparator?: import('primevue/column').ColumnPassThroughOptionType;
            filterOperator?: import('primevue/column').ColumnPassThroughOptionType;
            pcFilterOperatorDropdown?: import('primevue/select').SelectPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            filterRuleList?: import('primevue/column').ColumnPassThroughOptionType;
            filterRule?: import('primevue/column').ColumnPassThroughOptionType;
            pcFilterConstraintDropdown?: import('primevue/select').SelectPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            filterRemove?: import('primevue/column').ColumnPassThroughOptionType;
            pcFilterRemoveRuleButton?: {
                root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                hooks?: {
                    onBeforeCreate?: (() => void) | undefined;
                    onCreated?: (() => void) | undefined;
                    onBeforeMount?: (() => void) | undefined;
                    onMounted?: (() => void) | undefined;
                    onBeforeUpdate?: (() => void) | undefined;
                    onUpdated?: (() => void) | undefined;
                    onBeforeUnmount?: (() => void) | undefined;
                    onUnmounted?: (() => void) | undefined;
                } | undefined;
            } | undefined;
            filterAddButtonContainer?: import('primevue/column').ColumnPassThroughOptionType;
            pcFilterAddRuleButton?: {
                root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                hooks?: {
                    onBeforeCreate?: (() => void) | undefined;
                    onCreated?: (() => void) | undefined;
                    onBeforeMount?: (() => void) | undefined;
                    onMounted?: (() => void) | undefined;
                    onBeforeUpdate?: (() => void) | undefined;
                    onUpdated?: (() => void) | undefined;
                    onBeforeUnmount?: (() => void) | undefined;
                    onUnmounted?: (() => void) | undefined;
                } | undefined;
            } | undefined;
            filterButtonbar?: import('primevue/column').ColumnPassThroughOptionType;
            pcFilterClearButton?: {
                root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                hooks?: {
                    onBeforeCreate?: (() => void) | undefined;
                    onCreated?: (() => void) | undefined;
                    onBeforeMount?: (() => void) | undefined;
                    onMounted?: (() => void) | undefined;
                    onBeforeUpdate?: (() => void) | undefined;
                    onUpdated?: (() => void) | undefined;
                    onBeforeUnmount?: (() => void) | undefined;
                    onUnmounted?: (() => void) | undefined;
                } | undefined;
            } | undefined;
            pcFilterApplyButton?: {
                root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                hooks?: {
                    onBeforeCreate?: (() => void) | undefined;
                    onCreated?: (() => void) | undefined;
                    onBeforeMount?: (() => void) | undefined;
                    onMounted?: (() => void) | undefined;
                    onBeforeUpdate?: (() => void) | undefined;
                    onUpdated?: (() => void) | undefined;
                    onBeforeUnmount?: (() => void) | undefined;
                    onUnmounted?: (() => void) | undefined;
                } | undefined;
            } | undefined;
            rowToggleButton?: import('primevue/column').ColumnPassThroughOptionType;
            rowToggleIcon?: import('primevue/column').ColumnPassThroughOptionType;
            bodyCell?: import('primevue/column').ColumnPassThroughOptionType;
            reorderableRowHandle?: import('primevue/column').ColumnPassThroughOptionType;
            pcRowRadiobutton?: import('primevue/radiobutton').RadioButtonPassThroughOptionType;
            pcRowCheckbox?: import('primevue/checkbox').CheckboxPassThroughOptionType;
            pcRowEditorInit?: import('primevue/column').ColumnPassThroughOptionType;
            pcRowEditorSave?: import('primevue/column').ColumnPassThroughOptionType;
            pcRowEditorCancel?: import('primevue/column').ColumnPassThroughOptionType;
            footerCell?: import('primevue/column').ColumnPassThroughOptionType;
            columnFooter?: import('primevue/column').ColumnPassThroughOptionType;
            bodyCellContent?: import('primevue/column').ColumnPassThroughOptionType;
            hooks?: {
                onBeforeCreate?: (() => void) | undefined;
                onCreated?: (() => void) | undefined;
                onBeforeMount?: (() => void) | undefined;
                onMounted?: (() => void) | undefined;
                onBeforeUpdate?: (() => void) | undefined;
                onUpdated?: (() => void) | undefined;
                onBeforeUnmount?: (() => void) | undefined;
                onUnmounted?: (() => void) | undefined;
            } | undefined;
        } | undefined;
    }[], ITableColumn<unknown>[] | {
        field?: string | undefined;
        title?: string | undefined;
        titleCls?: string | undefined;
        titleAlign?: ("left" | "center" | "right") | undefined;
        id?: string | undefined;
        key?: string | undefined;
        sortable?: boolean | undefined;
        cellComponent?: InstanceType<any>;
        cellParams?: any;
        cellDisplay?: ((data: unknown, records: unknown[]) => any) | undefined;
        cellClass?: string | ((column: ITableColumn, node: unknown) => string) | undefined;
        lock?: TColumnLock | undefined;
        cls?: string | undefined;
        showMenu?: boolean | undefined;
        state?: {
            lock?: TColumnLock | undefined;
            width?: number | undefined;
            index?: number | undefined;
        } | undefined;
        indexOriginal?: number | undefined;
        props?: {
            columnKey?: string | undefined;
            field?: string | ((item: any) => string) | undefined;
            sortField?: string | ((item: any) => string) | undefined;
            filterField?: string | ((item: any) => string) | undefined;
            dataType?: string | undefined;
            sortable?: boolean | undefined;
            header?: string | undefined;
            footer?: string | undefined;
            style?: any;
            class?: any;
            headerStyle?: any;
            headerClass?: any;
            bodyStyle?: any;
            bodyClass?: any;
            footerStyle?: any;
            footerClass?: any;
            showFilterMenu?: boolean | undefined;
            showFilterOperator?: boolean | undefined;
            showClearButton?: boolean | undefined;
            showApplyButton?: boolean | undefined;
            showFilterMatchModes?: boolean | undefined;
            showAddButton?: boolean | undefined;
            filterMatchModeOptions?: import('primevue/column').ColumnFilterMatchModeOptions[] | undefined;
            maxConstraints?: number | undefined;
            excludeGlobalFilter?: boolean | undefined;
            filterHeaderStyle?: any;
            filterHeaderClass?: any;
            filterMenuStyle?: any;
            filterMenuClass?: any;
            selectionMode?: "single" | "multiple" | undefined;
            expander?: boolean | undefined;
            colspan?: number | undefined;
            rowspan?: number | undefined;
            rowReorder?: boolean | undefined;
            rowReorderIcon?: string | undefined;
            reorderableColumn?: boolean | undefined;
            rowEditor?: boolean | undefined;
            frozen?: boolean | undefined;
            alignFrozen?: "left" | "right" | undefined;
            exportable?: boolean | undefined;
            exportHeader?: string | undefined;
            exportFooter?: string | undefined;
            filterMatchMode?: string | undefined;
            hidden?: boolean | undefined;
            dt?: import('@primevue/core').DesignToken<any>;
            pt?: object | {
                root?: import('primevue/column').ColumnPassThroughOptionType;
                headerCell?: import('primevue/column').ColumnPassThroughOptionType;
                columnResizer?: import('primevue/column').ColumnPassThroughOptionType;
                columnHeaderContent?: import('primevue/column').ColumnPassThroughOptionType;
                columnTitle?: import('primevue/column').ColumnPassThroughOptionType;
                sort?: import('primevue/column').ColumnPassThroughOptionType;
                sortIcon?: import('primevue/column').ColumnPassThroughOptionType;
                pcSortBadge?: {
                    root?: import('primevue/badge').BadgePassThroughOptionType<any>;
                    hooks?: {
                        onBeforeCreate?: (() => void) | undefined;
                        onCreated?: (() => void) | undefined;
                        onBeforeMount?: (() => void) | undefined;
                        onMounted?: (() => void) | undefined;
                        onBeforeUpdate?: (() => void) | undefined;
                        onUpdated?: (() => void) | undefined;
                        onBeforeUnmount?: (() => void) | undefined;
                        onUnmounted?: (() => void) | undefined;
                    } | undefined;
                } | undefined;
                pcHeaderCheckbox?: import('primevue/checkbox').CheckboxPassThroughOptionType;
                filter?: import('primevue/column').ColumnPassThroughOptionType;
                filterElementContainer?: import('primevue/column').ColumnPassThroughOptionType;
                pcColumnFilterButton?: import('primevue/column').ColumnPassThroughOptionType;
                filterMenuIcon?: import('primevue/column').ColumnPassThroughOptionType;
                pcColumnFilterClearButton?: import('primevue/column').ColumnPassThroughOptionType;
                filterClearIcon?: import('primevue/column').ColumnPassThroughOptionType;
                filterOverlay?: import('primevue/column').ColumnPassThroughOptionType;
                filterConstraintList?: import('primevue/column').ColumnPassThroughOptionType;
                filterConstraint?: import('primevue/column').ColumnPassThroughOptionType;
                filterConstraintSeparator?: import('primevue/column').ColumnPassThroughOptionType;
                filterOperator?: import('primevue/column').ColumnPassThroughOptionType;
                pcFilterOperatorDropdown?: import('primevue/select').SelectPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                filterRuleList?: import('primevue/column').ColumnPassThroughOptionType;
                filterRule?: import('primevue/column').ColumnPassThroughOptionType;
                pcFilterConstraintDropdown?: import('primevue/select').SelectPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                filterRemove?: import('primevue/column').ColumnPassThroughOptionType;
                pcFilterRemoveRuleButton?: {
                    root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    hooks?: {
                        onBeforeCreate?: (() => void) | undefined;
                        onCreated?: (() => void) | undefined;
                        onBeforeMount?: (() => void) | undefined;
                        onMounted?: (() => void) | undefined;
                        onBeforeUpdate?: (() => void) | undefined;
                        onUpdated?: (() => void) | undefined;
                        onBeforeUnmount?: (() => void) | undefined;
                        onUnmounted?: (() => void) | undefined;
                    } | undefined;
                } | undefined;
                filterAddButtonContainer?: import('primevue/column').ColumnPassThroughOptionType;
                pcFilterAddRuleButton?: {
                    root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    hooks?: {
                        onBeforeCreate?: (() => void) | undefined;
                        onCreated?: (() => void) | undefined;
                        onBeforeMount?: (() => void) | undefined;
                        onMounted?: (() => void) | undefined;
                        onBeforeUpdate?: (() => void) | undefined;
                        onUpdated?: (() => void) | undefined;
                        onBeforeUnmount?: (() => void) | undefined;
                        onUnmounted?: (() => void) | undefined;
                    } | undefined;
                } | undefined;
                filterButtonbar?: import('primevue/column').ColumnPassThroughOptionType;
                pcFilterClearButton?: {
                    root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    hooks?: {
                        onBeforeCreate?: (() => void) | undefined;
                        onCreated?: (() => void) | undefined;
                        onBeforeMount?: (() => void) | undefined;
                        onMounted?: (() => void) | undefined;
                        onBeforeUpdate?: (() => void) | undefined;
                        onUpdated?: (() => void) | undefined;
                        onBeforeUnmount?: (() => void) | undefined;
                        onUnmounted?: (() => void) | undefined;
                    } | undefined;
                } | undefined;
                pcFilterApplyButton?: {
                    root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                    hooks?: {
                        onBeforeCreate?: (() => void) | undefined;
                        onCreated?: (() => void) | undefined;
                        onBeforeMount?: (() => void) | undefined;
                        onMounted?: (() => void) | undefined;
                        onBeforeUpdate?: (() => void) | undefined;
                        onUpdated?: (() => void) | undefined;
                        onBeforeUnmount?: (() => void) | undefined;
                        onUnmounted?: (() => void) | undefined;
                    } | undefined;
                } | undefined;
                rowToggleButton?: import('primevue/column').ColumnPassThroughOptionType;
                rowToggleIcon?: import('primevue/column').ColumnPassThroughOptionType;
                bodyCell?: import('primevue/column').ColumnPassThroughOptionType;
                reorderableRowHandle?: import('primevue/column').ColumnPassThroughOptionType;
                pcRowRadiobutton?: import('primevue/radiobutton').RadioButtonPassThroughOptionType;
                pcRowCheckbox?: import('primevue/checkbox').CheckboxPassThroughOptionType;
                pcRowEditorInit?: import('primevue/column').ColumnPassThroughOptionType;
                pcRowEditorSave?: import('primevue/column').ColumnPassThroughOptionType;
                pcRowEditorCancel?: import('primevue/column').ColumnPassThroughOptionType;
                footerCell?: import('primevue/column').ColumnPassThroughOptionType;
                columnFooter?: import('primevue/column').ColumnPassThroughOptionType;
                bodyCellContent?: import('primevue/column').ColumnPassThroughOptionType;
                hooks?: {
                    onBeforeCreate?: (() => void) | undefined;
                    onCreated?: (() => void) | undefined;
                    onBeforeMount?: (() => void) | undefined;
                    onMounted?: (() => void) | undefined;
                    onBeforeUpdate?: (() => void) | undefined;
                    onUpdated?: (() => void) | undefined;
                    onBeforeUnmount?: (() => void) | undefined;
                    onUnmounted?: (() => void) | undefined;
                } | undefined;
            } | undefined;
            ptOptions?: {
                mergeSections?: boolean | undefined;
                mergeProps?: import('primevue/passthrough').PassThroughMergePropsType;
            } | undefined;
            unstyled?: boolean | undefined;
        } | undefined;
        stateful?: boolean | undefined;
        expandable?: boolean | undefined;
        rowspan?: number | undefined;
        colspan?: number | undefined;
        classes?: {
            root?: import('primevue/column').ColumnPassThroughOptionType;
            headerCell?: import('primevue/column').ColumnPassThroughOptionType;
            columnResizer?: import('primevue/column').ColumnPassThroughOptionType;
            columnHeaderContent?: import('primevue/column').ColumnPassThroughOptionType;
            columnTitle?: import('primevue/column').ColumnPassThroughOptionType;
            sort?: import('primevue/column').ColumnPassThroughOptionType;
            sortIcon?: import('primevue/column').ColumnPassThroughOptionType;
            pcSortBadge?: {
                root?: import('primevue/badge').BadgePassThroughOptionType<any>;
                hooks?: {
                    onBeforeCreate?: (() => void) | undefined;
                    onCreated?: (() => void) | undefined;
                    onBeforeMount?: (() => void) | undefined;
                    onMounted?: (() => void) | undefined;
                    onBeforeUpdate?: (() => void) | undefined;
                    onUpdated?: (() => void) | undefined;
                    onBeforeUnmount?: (() => void) | undefined;
                    onUnmounted?: (() => void) | undefined;
                } | undefined;
            } | undefined;
            pcHeaderCheckbox?: import('primevue/checkbox').CheckboxPassThroughOptionType;
            filter?: import('primevue/column').ColumnPassThroughOptionType;
            filterElementContainer?: import('primevue/column').ColumnPassThroughOptionType;
            pcColumnFilterButton?: import('primevue/column').ColumnPassThroughOptionType;
            filterMenuIcon?: import('primevue/column').ColumnPassThroughOptionType;
            pcColumnFilterClearButton?: import('primevue/column').ColumnPassThroughOptionType;
            filterClearIcon?: import('primevue/column').ColumnPassThroughOptionType;
            filterOverlay?: import('primevue/column').ColumnPassThroughOptionType;
            filterConstraintList?: import('primevue/column').ColumnPassThroughOptionType;
            filterConstraint?: import('primevue/column').ColumnPassThroughOptionType;
            filterConstraintSeparator?: import('primevue/column').ColumnPassThroughOptionType;
            filterOperator?: import('primevue/column').ColumnPassThroughOptionType;
            pcFilterOperatorDropdown?: import('primevue/select').SelectPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            filterRuleList?: import('primevue/column').ColumnPassThroughOptionType;
            filterRule?: import('primevue/column').ColumnPassThroughOptionType;
            pcFilterConstraintDropdown?: import('primevue/select').SelectPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
            filterRemove?: import('primevue/column').ColumnPassThroughOptionType;
            pcFilterRemoveRuleButton?: {
                root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                hooks?: {
                    onBeforeCreate?: (() => void) | undefined;
                    onCreated?: (() => void) | undefined;
                    onBeforeMount?: (() => void) | undefined;
                    onMounted?: (() => void) | undefined;
                    onBeforeUpdate?: (() => void) | undefined;
                    onUpdated?: (() => void) | undefined;
                    onBeforeUnmount?: (() => void) | undefined;
                    onUnmounted?: (() => void) | undefined;
                } | undefined;
            } | undefined;
            filterAddButtonContainer?: import('primevue/column').ColumnPassThroughOptionType;
            pcFilterAddRuleButton?: {
                root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                hooks?: {
                    onBeforeCreate?: (() => void) | undefined;
                    onCreated?: (() => void) | undefined;
                    onBeforeMount?: (() => void) | undefined;
                    onMounted?: (() => void) | undefined;
                    onBeforeUpdate?: (() => void) | undefined;
                    onUpdated?: (() => void) | undefined;
                    onBeforeUnmount?: (() => void) | undefined;
                    onUnmounted?: (() => void) | undefined;
                } | undefined;
            } | undefined;
            filterButtonbar?: import('primevue/column').ColumnPassThroughOptionType;
            pcFilterClearButton?: {
                root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                hooks?: {
                    onBeforeCreate?: (() => void) | undefined;
                    onCreated?: (() => void) | undefined;
                    onBeforeMount?: (() => void) | undefined;
                    onMounted?: (() => void) | undefined;
                    onBeforeUpdate?: (() => void) | undefined;
                    onUpdated?: (() => void) | undefined;
                    onBeforeUnmount?: (() => void) | undefined;
                    onUnmounted?: (() => void) | undefined;
                } | undefined;
            } | undefined;
            pcFilterApplyButton?: {
                root?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                loadingIcon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                icon?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                label?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                pcBadge?: import('primevue/button').ButtonPassThroughOptionType<import('primevue/column').ColumnSharedPassThroughMethodOptions>;
                hooks?: {
                    onBeforeCreate?: (() => void) | undefined;
                    onCreated?: (() => void) | undefined;
                    onBeforeMount?: (() => void) | undefined;
                    onMounted?: (() => void) | undefined;
                    onBeforeUpdate?: (() => void) | undefined;
                    onUpdated?: (() => void) | undefined;
                    onBeforeUnmount?: (() => void) | undefined;
                    onUnmounted?: (() => void) | undefined;
                } | undefined;
            } | undefined;
            rowToggleButton?: import('primevue/column').ColumnPassThroughOptionType;
            rowToggleIcon?: import('primevue/column').ColumnPassThroughOptionType;
            bodyCell?: import('primevue/column').ColumnPassThroughOptionType;
            reorderableRowHandle?: import('primevue/column').ColumnPassThroughOptionType;
            pcRowRadiobutton?: import('primevue/radiobutton').RadioButtonPassThroughOptionType;
            pcRowCheckbox?: import('primevue/checkbox').CheckboxPassThroughOptionType;
            pcRowEditorInit?: import('primevue/column').ColumnPassThroughOptionType;
            pcRowEditorSave?: import('primevue/column').ColumnPassThroughOptionType;
            pcRowEditorCancel?: import('primevue/column').ColumnPassThroughOptionType;
            footerCell?: import('primevue/column').ColumnPassThroughOptionType;
            columnFooter?: import('primevue/column').ColumnPassThroughOptionType;
            bodyCellContent?: import('primevue/column').ColumnPassThroughOptionType;
            hooks?: {
                onBeforeCreate?: (() => void) | undefined;
                onCreated?: (() => void) | undefined;
                onBeforeMount?: (() => void) | undefined;
                onMounted?: (() => void) | undefined;
                onBeforeUpdate?: (() => void) | undefined;
                onUpdated?: (() => void) | undefined;
                onBeforeUnmount?: (() => void) | undefined;
                onUnmounted?: (() => void) | undefined;
            } | undefined;
        } | undefined;
    }[]>;
    filterFields: import('vue').Ref<string[], string[]>;
    propsComponent: import('vue').ComputedRef<DataTableProps>;
    loadRecords: (loadCount?: number) => Promise<void>;
    recordsTotal: import('vue').Ref<number, number>;
    recordsCached: import('vue').Ref<import('@vue/reactivity').UnwrapRefSimple<TData>[], TData[] | import('@vue/reactivity').UnwrapRefSimple<TData>[]>;
    filters: import('primevue/datatable').DataTableFilterMeta;
    search: import('vue').Ref<string, string>;
    start: import('vue').ComputedRef<number>;
    loading: import('vue').Ref<boolean, boolean>;
    rowsPerPage: import('vue').Ref<number, number>;
    currentPage: import('vue').Ref<number, number>;
    previousPage: () => void;
    nextPage: () => void;
    changeRowsPerPage: (value: number) => void;
    changePage: (value: number) => void;
    getCellParams: ({ cellParams }: ITableColumn, data: {
        data: unknown[];
        field: string;
    }) => any;
    getCellClass: (column: ITableColumn, node: ITreeNode) => string;
    getNodeParams: ({ cellParams }: ITableColumn, node: ITreeNode) => any;
    getCellDisplay: ({ cellDisplay }: ITableColumn, { data, field }: {
        data: unknown[];
        field: string;
    }) => any;
    getNodeDisplay: ({ cellDisplay }: ITableColumn, { node, column }: {
        node: ITreeNode;
        column: ITableColumn;
    }) => any;
    getColumnMenuConfig: (column: ITableColumn) => IBaseMenu;
};
export declare function getPassThroughNode<T = unknown>(options: IPassThroughOptions): ITreeNode<T>;
